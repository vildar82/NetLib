<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:converters="clr-namespace:NetLib.WPF.Converters">
    <ResourceDictionary.MergedDictionaries>
        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <!-- Accent and AppTheme setting -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        <ResourceDictionary>
            <!--Если textBox в ListBox - выделяется весь элемент-->
            <Style x:Key="TextBoxListBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="IsHitTestVisible" Value="False" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, 
                    AncestorType={x:Type ListBoxItem}, AncestorLevel=1}}" Value="True">
                        <Setter Property="IsHitTestVisible" Value="True" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}"> 
                <Setter Property="Margin" Value="1"/>
            </Style>
            <Style TargetType="xctk:DoubleUpDown" BasedOn="{StaticResource {x:Type xctk:DoubleUpDown}}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HighlightColor}"/>
				<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}"/>
            </Style>
            <Style TargetType="xctk:IntegerUpDown" BasedOn="{StaticResource {x:Type xctk:IntegerUpDown}}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HighlightColor}" />
	            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}"/>
            </Style>
            <DataTemplate x:Key="textBlockEnumDesc">
                <TextBlock Text="{Binding Converter={converters:EnumDescriptionConverter}}"/>
            </DataTemplate>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>

