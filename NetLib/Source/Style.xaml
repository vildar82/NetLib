<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:NetLib.WPF.Converters"
                    xmlns:controls="http://metro.pik.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
        <!-- Accent and AppTheme setting -->
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

        <ResourceDictionary Source="WPF/Styles/ScrollBarIOS.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--Если textBox в ListBox - выделяется весь элемент-->
    <Style x:Key="TextBoxListBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor,
                    AncestorType={x:Type ListBoxItem}, AncestorLevel=1}}"
                Value="True">
                <Setter Property="IsHitTestVisible" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <DataTemplate x:Key="textBlockEnumDesc">
        <TextBlock Text="{Binding Converter={converters:EnumDescriptionConverter}}" />
    </DataTemplate>
    <Style x:Key="ListBoxHiddenBtn" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBoxItem},Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ListBoxCollapseBtn" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBoxItem},Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="HiddenButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}, Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CollapsedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter},Path=IsMouseOver}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TbFilter" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="controls:TextBoxHelper.Watermark" Value="Поиск..." />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="controls:TextBoxHelper.HasText" Value="True">
                <Setter Property="controls:TextBoxHelper.ClearTextButton" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Кнопка блокировки -->
    <iconPacks:Modern x:Key="iconLock" Kind="Lock" x:Shared="False"/>
    <iconPacks:Modern x:Key="iconUnlock" Kind="Unlock" x:Shared="False"/>
    <Style x:Key="tbBlocked" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Content">
            <Setter.Value>
                <StackPanel Orientation="Horizontal">
                    <Grid
                        Visibility="{Binding
                  RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked,
                  Converter={converters:NegateBoolToCollapseVisibilityConverter}}">
                        <ContentPresenter Content="{StaticResource iconLock}" />
                    </Grid>
                    <Grid
                        Visibility="{Binding
                  RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=IsChecked,
                  Converter={converters:BooleanToCollapseVisibilityConverter}}">
                        <ContentPresenter Content="{StaticResource iconUnlock}" />
                    </Grid>
                </StackPanel>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ItemsControlVirtualizedStyle" TargetType="ItemsControl">
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border
                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                        Padding="{TemplateBinding Control.Padding}"
                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                        Background="{TemplateBinding Panel.Background}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
